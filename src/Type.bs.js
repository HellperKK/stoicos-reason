// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var $$String = require("bs-platform/lib/js/string.js");
var Hashtbl = require("bs-platform/lib/js/hashtbl.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");
var Utils$ReactTemplate = require("./Utils.bs.js");

var vars = Hashtbl.create(undefined, 100);

var sortie = /* record */[/* contents */""];

function to_int(tok) {
  if (typeof tok === "number") {
    return 0;
  } else {
    switch (tok.tag | 0) {
      case 1 : 
          return tok[0] | 0;
      case 0 : 
      case 2 : 
          return tok[0];
      case 3 : 
      case 4 : 
          return Utils$ReactTemplate.super_int_of_string(tok[0]);
      default:
        return 0;
    }
  }
}

function to_float(tok) {
  if (typeof tok === "number") {
    return 0.0;
  } else {
    switch (tok.tag | 0) {
      case 1 : 
          return tok[0];
      case 0 : 
      case 2 : 
          return tok[0];
      case 3 : 
      case 4 : 
          return Utils$ReactTemplate.super_float_of_string(tok[0]);
      default:
        return 0.0;
    }
  }
}

function to_char(tok) {
  if (typeof tok === "number") {
    return /* " " */32;
  } else {
    switch (tok.tag | 0) {
      case 0 : 
          return Pervasives.char_of_int(tok[0]);
      case 1 : 
          return Pervasives.char_of_int(tok[0] | 0);
      case 2 : 
          return tok[0];
      case 3 : 
      case 4 : 
          return Caml_string.get(tok[0], 0);
      default:
        return /* " " */32;
    }
  }
}

function to_string(tok) {
  if (typeof tok === "number") {
    return "";
  } else {
    switch (tok.tag | 0) {
      case 0 : 
          return String(tok[0]);
      case 1 : 
          return Pervasives.string_of_float(tok[0]);
      case 2 : 
          return $$String.make(1, tok[0]);
      case 3 : 
      case 4 : 
          return tok[0];
      default:
        return "";
    }
  }
}

function to_function(tok) {
  var exit = 0;
  if (typeof tok === "number" || tok.tag !== 10) {
    exit = 1;
  } else {
    return /* NativeFonction */Block.__(10, [tok[0]]);
  }
  if (exit === 1) {
    return /* NativeFonction */Block.__(10, [(function () {
                  return /* Unit */0;
                })]);
  }
  
}

function get_var(tok) {
  if (typeof tok === "number" || tok.tag !== 5) {
    return tok;
  } else {
    return Hashtbl.find(vars, tok[0]);
  }
}

function run_fun(func, args) {
  if (typeof func === "number" || func.tag !== 10) {
    return /* Unit */0;
  } else {
    return Curry._1(func[0], args);
  }
}

exports.vars = vars;
exports.sortie = sortie;
exports.to_int = to_int;
exports.to_float = to_float;
exports.to_char = to_char;
exports.to_string = to_string;
exports.to_function = to_function;
exports.get_var = get_var;
exports.run_fun = run_fun;
/* vars Not a pure module */
